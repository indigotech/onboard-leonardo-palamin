input UserCreateInput {
  name: String!
  email: String!
  password: String!
  birthDate: String
}

input UserInput {
  id: ID!
}

type User {
  id: ID!
  name: String!
  email: String!
  birthDate: String!
}

input UsersInput {
  limit: Int = 10
  start: Int = 0
}

type UsersResponse {
  count: Int
  previusPage: Boolean
  nextPage: Boolean
  start: Int
  limit: Int
  users: [User]
}

input LoginInput {
  email: String!
  password: String!
  rememberMe: Boolean
}

type Login {
  user: User
  token: String!
}

type Query {
  helloWorld: String!
  user(user: UserInput): User
  users(data: UsersInput): UsersResponse
}

type Mutation {
  createUser(user: UserCreateInput): User
  login(data: LoginInput): Login
}
