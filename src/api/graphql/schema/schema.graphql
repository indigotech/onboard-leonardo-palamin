input UserCreateInput {
  name: String!
  email: String!
  password: String!
  birthDate: String
}

input UserInput {
  id: ID!
}

input UsersInput {
  take: Int = 10
  skip: Int = 0
}

type User {
  id: ID!
  name: String!
  email: String!
  birthDate: String!
  dog: [Dog]
}

type Users {
  users: [User!]
}

input LoginInput {
  email: String!
  password: String!
  rememberMe: Boolean
}

type Login {
  user: User
  token: String!
}

type Dog {
  id: ID!
  name: String!
}

type Query {
  helloWorld: String!
  user(user: UserInput): User
  users: Users
}

type Mutation {
  createUser(user: UserCreateInput): User
  login(data: LoginInput): Login
}
